{"version":3,"sources":["component/Searchbar.js","component/ImageGalleryItem.js","component/Batton.js","component/Modal.js","service/api.js","component/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","name","placeholder","onChange","Component","ImageGalleryItem","images","clickModal","map","id","webformatURL","tags","largeImageURL","src","alt","onClick","Button","onClickButton","Modal","handleBackdropClick","target","handleKeyDown","e","code","window","addEventListener","removeEventListener","url","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","loading","showModal","imageSrc","toggleModal","bigImage","prevState","incrementPage","imageAPI","hits","prevProps","prevName","nextName","catch","finally","message","color","height","width","length","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc94b344.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nexport default class Searchbar extends Component {\n  state = {\n    imageName: \"\",\n  };\n\n  static propTypes = {\n    handleNameChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n  };\n\n  handleNameChange = (event) => {\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.imageName.trim() === \"\") {\n      toast.error(\"Введите правельный запрос\");\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n\n    this.setState({ imageName: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.imageName}\n            name=\"imageName\"\n            placeholder=\"Search images and photos\"\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ images, clickModal }) =>\n  images.map(({ id, webformatURL, tags, largeImageURL }) => (\n    <li key={id} className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        onClick={() => {\n          clickModal(largeImageURL);\n        }}\n      />\n    </li>\n  ));\n\nImageGalleryItem.propTypes = {\n  clickModal: PropTypes.func,\n  images: PropTypes.array,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Button = ({ onClickButton }) => (\n  <button type=\"button\" className=\"Button\" onClick={onClickButton}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClickButton: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Modal extends Component {\n  static propTypes = {\n    handleBackdropClick: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  compponentWIllUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.clickModal();\n    }\n  };\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.clickModal();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.url} alt=\"foto\" className=\"Modal\" />\n        </div>\n      </div>\n    );\n  }\n}\n","const key = \"19520072-2a079db9835241cceccf8dd5b\";\nconst baseUrl = \"https://pixabay.com/api/\";\n\nfunction fetchImage(name, page) {\n  return fetch(`${baseUrl}?image_type=photo&orientation=horizontal&q=${name}\n           &language=en&page=${page}&per_page=12&key=${key}`).then(\n    (response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Введите правельный запрос`));\n    }\n  );\n}\n\nconst api = { fetchImage };\n\nexport default api;\n","import React, { Component } from \"react\";\n\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport Button from \"./Batton\";\nimport Modal from \"./Modal\";\nimport imageAPI from \"../service/api\";\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    showModal: false,\n    imageSrc: \"\",\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    const { page } = this.state;\n    if (prevName !== nextName) {\n      this.setState({\n        loading: true,\n        images: [],\n        page: 1,\n      });\n\n      imageAPI\n        .fetchImage(nextName, page)\n        .then(({ hits }) => this.setState({\n          images: [...hits],\n        page: page + 1}))\n        .catch((error) => this.setState({ error }))\n        .finally(() => this.setState({ loading: false }));\n    }\n  }\n\n  toggleModal = (bigImage) => {\n    return this.setState((prevState) => ({\n      showModal: !prevState.showModal,\n      imageSrc: bigImage,\n    }));\n  };\n\n  incrementPage = () => {\n    imageAPI\n      .fetchImage(this.props.imageName, this.state.page)\n      .then(({ hits }) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...hits],\n          page: prevState.page + 1,\n        }))\n      );\n  };\n\n  render() {\n    const { loading, images, error, showModal, imageSrc } = this.state;\n\n    return (\n      <>\n        {error && <h1>{error.message}</h1>}\n        {loading && (\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n\n        {images && (\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem images={images} clickModal={this.toggleModal} />\n          </ul>\n        )}\n\n        {images.length > 0 && <Button onClickButton={this.incrementPage} />}\n\n        {showModal && <Modal clickModal={this.toggleModal} url={imageSrc} />}\n      </>\n    );\n  }\n}","import { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nimport Searchbar from \"./component/Searchbar\";\nimport ImageGallery from \"./component/ImageGallery\";\n\nexport default class App extends Component {\n  state = {\n    imageName: \"\",\n  };\n\n  static propTypes = {\n    handleFormSubmit: PropTypes.func,\n  };\n\n  handleFormSubmit = (imageName) => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery imageName={this.state.imageName} />{\" \"}\n        {/*Прокинули через проп значение state*/}\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}