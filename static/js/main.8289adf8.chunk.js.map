{"version":3,"sources":["component/Searchbar.js","component/ImageGalleryItem.js","component/Batton.js","component/Modal.js","component/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","name","placeholder","onChange","Component","ImageGalleryItem","images","clickModal","map","id","webformatURL","tags","src","alt","onClick","Button","onClickButton","Modal","handleBackdropClick","target","ImageGallery","loading","showModal","toggleModal","prevState","prevProps","prevName","nextName","setTimeout","fetch","then","response","ok","json","Promise","reject","Error","hits","catch","finally","message","color","height","width","length","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8289adf8.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport {toast} from 'react-toastify'\r\n\r\n\r\n\r\nexport default class Searchbar extends Component{ \r\n  state = {\r\n    imageName: ''\r\n  }\r\n    \r\n  handleNameChange = event => {\r\n  this.setState({imageName: event.currentTarget.value.toLowerCase()})\r\n}\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.imageName.trim() === '') {\r\n      toast.error('Введите правельный запрос')\r\n      return \r\n    }\r\n\r\n    this.props.onSubmit(this.state.imageName)\r\n    \r\n    this.setState({imageName: ''})\r\n } \r\n  \r\n  render() {\r\n    return (<header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n        \r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n          value={this.state.imageName}\r\n          name=\"imageName\"\r\n      placeholder=\"Search images and photos\" onChange={this.handleNameChange}\r\n    />\r\n  </form>\r\n</header>)}\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst ImageGalleryItem = ({images, clickModal}) =>( \r\n    images.map(({id, webformatURL, tags}) => ( <li key={id} className=\"ImageGalleryItem\">\r\n        <img src={webformatURL} alt={tags} onClick={clickModal}/>\r\n        </li>)\r\n    ))\r\n\r\nImageGalleryItem.propTypes = {\r\n    images: PropTypes.array,\r\n    clickModal: PropTypes.func\r\n}\r\n\r\n\r\nexport default ImageGalleryItem;","const Button = ({onClickButton}) =>( \r\n    <button type=\"button\" className=\"load\" onClick={onClickButton}>Load more</button>)\r\n\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\n\r\nexport default class Modal extends Component {\r\n\r\n     handleBackdropClick = event => {\r\n          if (event.currentTarget === event.target) {\r\n               this.props.clickModal()\r\n              \r\n          }\r\n     }\r\n\r\n     render() {\r\n          return (\r\n     <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n         <div className=\"Modal\">\r\n      <img src=\"#\" alt=\"foto\" />\r\n  </div>\r\n</div>\r\n          )\r\n     }\r\n}\r\n \r\n\r\n\r\n\r\n           \r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport Button from './Batton';\r\nimport Modal from './Modal';\r\n\r\n\r\nconst key = '19520072-2a079db9835241cceccf8dd5b';\r\nconst page = 1;\r\n    \r\n\r\nexport default class ImageGallery extends Component{\r\n  state = {\r\n    images: [],\r\n    loading: false,\r\n    error: null,\r\n    showModal: false\r\n  \r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName\r\n\r\n    if (prevName !== nextName){\r\n      this.setState({\r\n        loading: true,\r\n        images: [] \r\n      }) \r\n      \r\n      setTimeout(() => {\r\n        fetch(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${nextName}\r\n           &language=en&page=${page}&per_page=12&key=${key}`)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json()\r\n            }\r\n            return Promise.reject(\r\n              new Error (`Введите правельный запрос`)\r\n            )\r\n          })          \r\n          .then(({ hits }) => this.setState({ images: [...hits] }))\r\n          .catch(error => this.setState({error}))\r\n        .finally(() => this.setState({loading: false}))\r\n      }, 2000)\r\n    }\r\n  }\r\n   \r\n  toggleModal = () => {\r\n  \r\n      return (\r\n    this.setState(prevState => (\r\n    {showModal: !prevState.showModal}\r\n  )))\r\n }\r\n\r\n  render() {\r\n   \r\n    const { loading, images, error, showModal } = this.state;\r\n\r\n    return (<>\r\n      { error && <h1>{error.message}</h1>}\r\n      {loading && <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />}\r\n\r\n      {images && (< ul >\r\n        <ImageGalleryItem images={images} clickModal={this.toggleModal} />\r\n      </ul>)}  \r\n      \r\n\r\n      {images.length > 0 && <Button />}\r\n\r\n      {showModal && <Modal clickModal={this.toggleModal} />}\r\n    \r\n        \r\n        \r\n</>\r\n    )\r\n    }\r\n  }","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n \nimport Searchbar from './component/Searchbar';\nimport ImageGallery from './component/ImageGallery'\n\nexport default class App extends Component {\n\n  state = {\n    imageName: ''\n    \n  }\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName})\n  }\n\nrender(){\n  return (\n    <div className=\"App\">\n     \n      <Searchbar onSubmit={this.handleFormSubmit} />\n     { /*<ImageGallery images={this.state.imagesName}/> */}\n    \n      <ImageGallery imageName={this.state.imageName}/>  {/*Прокинули через проп значение state*/}\n      \n       <ToastContainer autoClose={3000}/>\n    </div>\n  );}\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n import 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}